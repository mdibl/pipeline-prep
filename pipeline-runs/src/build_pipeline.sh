#!/bin/bash

##
## Assumptions: assumes the following structure under the parent directory
#  of this script
#   1) cfgs
#   2) src
## Assumptions: assumes the following config files in the cfgs directory
#  1) jenkins.cfg
# 
#Usage:
# ./submit_job.sh path2/pipeline.cfg [sampleID]
#
source /etc/profile.d/biocore.sh

cd `dirname $0`
script_name=`basename $0`
## Check expected structure
working_dir=`pwd`
parent_dir=`dirname $working_dir`
cfgs_dir=$parent_dir/cfgs
PIPELINE_CONFIG_FILE=$1
SERVER_TYPE=$2
sample_id=$3
JENKINS_CONFIG=$cfgs_dir/jenkins.cfg
CWLTOOL=`which cwltool`
CURRENT_USER=`id -un`
#CURRENT_USER=bioadmin

if [ ! -d $cfgs_dir ]
then
   echo "ERROR: Expected cfgs directory missing under $parent_dir"
   exit 1
fi

if [ ! -f $JENKINS_CONFIG ]
then
   echo "ERROR: Missing jenkins.cfg under $cfgs_dir"
   exit 1
fi
if [ ! -f ${CWLTOOL} ]
then
  echo "ERROR: cwltool not installed on `uname -n ` - see ${CWLTOOL}" 
  exit 1
fi
if [ -z "${PIPELINE_CONFIG_FILE}" ]
then
   echo "********************************************************"
   echo""
   echo "Usage: ./$script_name path2_pipeline.cfg [server_type] [sampleID]"
   echo""
   echo "Where:"
   echo "path2_pipeline.cfg: Required - is the full path to your pipeline project config file."
   echo "                    The pipeline config file is generated by running the program gen_config.sh"
   echo "sampleID:  Optional - is the sample Id as found in the experiment design file."
   echo "           Default, triggers a pipeline run for each sample listed in the design file."
   echo ""
   echo ""
   echo "Example 1: ./$script_name /data/scratch/rna-seq/JimCoffman/Embryo_Cortisol_2015/results/Embryo_Cortisol_2015_1559230685/cfgs/pipeline.cfg"
   echo ""
   echo "Assumptions: assumes the following structure under $script_name script parent directory"
   echo "   1) cfgs "
   echo "   2) src"
   echo "Assumptions: assumes the following config files in the cfgs directory"
   echo "   1) jenkins.cfg"
   echo ""
   echo "The program triggers a pipeline build on Jenkins for each sample listed in the design file(Example 1) or"
   echo "for the specified sampleID (Example 2)"
   echo ""
   exit 1
fi
source ${PIPELINE_CONFIG_FILE}
source ${JENKINS_CONFIG}
echo "********************************************************"
echo "Launching $PROJECT_NAME pipelines on Jenkins  "
echo "********************************************************"
date
JENKINS_JOB=${DEFAULT_JENKINS_JOB[$SERVER_TYPE]}
[ -z "$JENKINS_JOB" ] && JENKINS_JOB=${DEFAULT_JENKINS_JOB[local]}

launch_build(){
  METADATA_SCRIPT=$PIPELINE_META_BASE/$sample_id.$ORGANISM.pcf
  if [ -f ${METADATA_SCRIPT} ]
  then
     echo "SampleID: $sample_id"
     echo "Sample pipeline meta config: ${METADATA_SCRIPT}"
     echo "CMD: ssh -l $CURRENT_USER -p  $JENKINS_SSH_PORT  $JENKINS_URL build $JENKINS_JOB \
     -p PIPELINE_METADATA_SCRIPT=$METADATA_SCRIPT"
     ssh -l $CURRENT_USER -p  $JENKINS_SSH_PORT $JENKINS_URL  build $JENKINS_JOB -p PIPELINE_METADATA_SCRIPT=$METADATA_SCRIPT
  else
     echo "SKIPPING: $sample_id" 
     echo "ERROR: The meta file ${METADATA_SCRIPT} - not found  on `uname -n ` " 
  fi
}
if [ -z "$sample_id" ]
then
  for sample_id in ${SAMPLES}
  do
     launch_build $sample_id
  done
else
    launch_build $sample_id
fi
date
exit 0

