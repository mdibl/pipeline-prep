#!/bin/bash

##
## Assumptions: assumes the following structure under the  working directory
#   1) cfgs
#   2) src
## Assumptions: assumes the following config files in the cfgs directory
#  1) cwl.tool_options.cfg
#  2) pipeline.cfg
# 
source /etc/profile.d/biocore.sh

cd `dirname $0`
script_name=`basename $0`
## Check expected structure
working_dir=`pwd`
parent_dir=`dirname $working_dir`
cfgs_dir=$parent_dir/cfgs
PIPELINE_CONFIG_FILE=$1
CWL_OPTIONS_CONFIG=$cfgs_dir/cwl.tool_options.cfg
invalid_user="no such user"

echo "Running on server: `uname -n`"

if [ ! -d $cfgs_dir ]
then
   echo "ERROR: Expected cfgs directory missing under $parent_dir"
   exit 1
fi

if [ ! -f $CWL_OPTIONS_CONFIG ]
then
   echo "ERROR: Missing cwl.tool_options.cfg under $cfgs_dir"
   exit 1
fi
date
if [ -z "${PIPELINE_CONFIG_FILE}" ]
then
   echo ""
   echo "****************************************************"
   echo "*      Sample PCF File Generator                   *"
   echo "****************************************************"
   echo ""
   echo "What It Does: generates a pcf file for each sample listed in the design file."
   echo "If the sampleID is specified, then only the pcf file for that sample is generated."
   echo ""
   echo "Usage: ./$script_name path2_pipeline.cfg [sampleID]"
   echo ""
   echo "Where:"
   echo "path2_pipeline.cfg: Required - is the full path to this pipeline config file."
   echo "       The pipeline config file is generated by running the program gen_config.sh"
   echo "sampleID:  Optional - is the sample Id as found in the experiment design file."
   echo "      Default, generates a pcf file for each sample listed in the design file."
   echo ""
   echo "Assumptions: assumes the following - relative to the script"
   echo "   1) ../cfgs "
   echo "   2) ../cfgs/cwl.tool_options.cfg"
   echo ""
   exit 1
fi

source ${PIPELINE_CONFIG_FILE}
source ${CWL_OPTIONS_CONFIG}

echo "$PATH2_JSON_FILES"
echo "$DESIGN_FILE"

##DO some QC
# 1) Check CWL_SCRIPT exists
 if [ ! -f $CWL_SCRIPT ]
 then
    echo "WARNING: CWL script missing - $CWL_SCRIPT"
    #exit 1
 fi
function gen_metafile(){
    #
    #Create the meta script config file
     echo "********.  Processing $sample_id *****************"
     JSON_FILE=$PATH2_JSON_FILES/$sample_id.$ORGANISM.json
     ##DO some QC
     # 1) Check son file  exists 
     if [ ! -f $JSON_FILE ]
     then
        echo "WARNING: JSON file missing - $JSON_FILE"
        #exit 1
     fi
     [ ! -d $PIPELINE_META_BASE ] && mkdir -p $PIPELINE_META_BASE
     PIPELINE_METADATA_SCRIPT=$PIPELINE_META_BASE/$sample_id.$ORGANISM.pcf
     [ -f ${PIPELINE_METADATA_SCRIPT} ] && rm -f ${PIPELINE_METADATA_SCRIPT}
     touch ${PIPELINE_METADATA_SCRIPT}
     echo "#!/bin/sh" > ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "##Full path to the cwl file" >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "CWL_SCRIPT=${CWL_SCRIPT}" >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "##Full path to the pipeline json file" >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "JSON_FILE=${JSON_FILE}" >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "## Cwl Command line options" >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "CWL_COMMAND_OPTIONS=\"${CWL_COMMAND_OPTIONS}\"" >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "## The owner of the pipeline results directory " >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "PIPELINE_OWNER=${PIPELINE_OWNER}" >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "## Pipeline results directory " >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
     echo "RESULTS_DIR=${RESULTS_DIR}" >> ${PIPELINE_METADATA_SCRIPT}
     echo "#" >> ${PIPELINE_METADATA_SCRIPT}
}

if [ -z "$SAMPLE_ID" ]
then
  for sample_id in ${SAMPLES}
  do
     gen_metafile $sample_id
  done
else
  gen_metafile $SAMPLE_ID
fi

date
exit 0
