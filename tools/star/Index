#!/bin/sh

#
#A script to pre-index a given dataset 
# In Bwa

# Input:
# 1) data_source_name
# 2) source_version
# 3) organism
# 4) dataset_name
# 5) tool name
# 6) tool version <STAR-2.6.1b> default current verion
#

SCRIPT_NAME=`basename $0`
cd `dirname $0`
echo "Running script from `pwd`"

WORKING_DIR=`pwd`

if [ $# -lt 5 ]
then 
  echo "Usage: ./$SCRIPT_NAME  source source-version organism dataset path2/gtf_file [tool-version]"
  echo "Example: ./$SCRIPT_NAME ensembl ensembl-91 danio_rerio genome /data/scratch/ensembl-91/danio_rerio-gtf/Danio_rerio.GRCz10.91.gtf [STAR-2.6.0c]"
  echo "The default tool-version is the current version of the tool"
  echo "The default index-prefix is tool_name-data_source_name-dataset"
  exit 1
fi

tool_name=star
tool_config=$tool_name.cfg
main_config=Configuration.cfg
##
if [ ! -f ../../$main_config ]
then
  echo "ERROR: ../../$main_config file missing"
  exit 1 
fi
source ./../../$main_config
if [ ! -f $tool_config ]
then
  echo "ERROR: $tool_config file missing from `pwd`"
  exit 1
fi
##Set this tool's specific variables
#
source ./$tool_config

data_source=$1
source_version=$2
organism=$3
dataset=$4
gtf_file=$5

tool_version=$TOOL_VERSION
index_file_prefix=""
this_reference_file="$data_source-reference.csv"

if [ ! -f $this_reference_file ] 
then
   echo "ERROR: $this_reference_file missing on `uname -n` under `pwd`"
   exit 1
fi
for line in  `cat $this_reference_file | grep $data_source | grep $dataset`
do
       IFS=', ' read -r -a fields <<< "$line"
       [ "${fields[3]}" = $dataset ] && index_file_prefix=${fields[5]}
done

[ $# -gt 5 ] && tool_version=$6
[ $# -gt 6 ] && index_file_prefix=$7

tool_index_base=$INDEX_BASE/$tool_version
tool_exec=$PACKAGE_INSTALL_BASE/$tool_version/bin/Linux_x86_64/$TOOL_INDEX_EXEC
index_dir=$tool_index_base/$source_version/$organism-$dataset
datasets_fasta_dir=$FASTA_FILES_BASE/$source_version/$organism-$dataset
index_options="$tool_exec $THREADS $MODE $sjdbGTFfile $gtf_file $sjdbOverhang $STAR_GENOME_DIR $index_dir"

source_config=../../data_sources/$data_source.cfg

if [ ! -d $datasets_fasta_dir ]
then
   echo "ERROR: directory $datasets_fasta_dir does not exists" | tee -a $log
   exit 1
fi
if [ ! -f $tool_exec ]
then
   echo "ERROR: $tool_exec executable missing" | tee -a $log
   exit 1
fi
#If this dataset has already been indexed clear old indexes
[ "$(ls -A $index_dir)" ] && mv $index_dir $index_dir.archive 
#
# Create index directory if not exists
#
[ ! -d $index_dir ] && mkdir -p $index_dir
if [ ! -d $index_dir ]
then
   echo "ERROR: Failed to create $index_dir"
   exit 1
fi

log=$LOGS_BASE/$SCRIPT_NAME.$source_version.$organism.$dataset.$tool_version.log

rm -rf $log
touch $log
echo "*************************************************" | tee -a $log
echo "" | tee -a $log
echo "Generating $tool_version indexes for $source_version $organism's $dataset"  | tee -a $log
echo "" | tee -a $log
echo "*************************************************" | tee -a $log
echo "" | tee -a $log
echo "ORGANIZATION:$ORGANIZATION" | tee -a $log 
echo "" | tee -a $log
echo "Date:`date`" | tee -a $log
echo "Tool-version: $tool_version" | tee -a $log
echo "Path to tool exec : $tool_exec" | tee -a $log
echo "Organism: $organism" | tee -a $log
echo "Dataset: $dataset" | tee -a $log
echo "Indexes Directory: $index_dir" | tee -a $log
echo "Indexes File Prefix: $index_file_prefix" | tee -a $log
echo "Refence Data Source version: $source_version" | tee -a $log
echo "Reference Input Dataset Directory: $datasets_fasta_dir" | tee -a $log
echo "Reference Data source config: $source_config" | tee -a $log
source ./$source_config
file_pattern=""
genome_file=""
##Since this is an associative array - make sure to
# use {} in order to access key-value
# 
file_pattern=${DATASETS[$dataset]}
#file_pattern=$DATASETS[$dataset]
echo "Reference File Pattern: $file_pattern" | tee -a $log
files_count=`ls $datasets_fasta_dir | grep $file_pattern | wc -l`
FASTA_FILES=`ls $datasets_fasta_dir | grep $file_pattern`
# run index command
echo "Reference Files Count: $files_count" | tee -a $log
echo "Running indexer from `pwd`" | tee -a $log
for target_file  in $FASTA_FILES
do 
    ##If there is more then one, then create a sub directory for each reference
    target_index_dir=$index_dir
    if [ $files_count -gt 1 ]
    then 
       target_index_dir=$index_dir/$target_file
       [ ! -d $target_index_dir ] && mkdir -p $target_index_dir
    fi 
    reference_file=$datasets_fasta_dir/$target_file
    index_cmd="$tool_exec $threadsOption $modeOption $sjdbGTFfileOption $gtf_file \
    $sjdbOverhangOption $starGenomeDirOption $target_index_dir \
    $genomeFastaFilesOption $reference_file"
    echo " -------------------------- " | tee -a $log
    echo " " | tee -a $log
    echo "Reference Dataset file: $datasets_fasta_dir/$target_file" | tee -a $log
    echo "Indexer Cmd: $index_cmd" | tee -a $log
    echo " " | tee -a $log
    echo "=== `basename $tool_exec`'s Logs start Here ===" | tee -a $log
    $index_cmd 2>&1 | tee -a $log
    echo "=== `basename $tool_exec`'s Logs end Here ===" | tee -a $log
done
echo "Program Complete" | tee -a $log
exit 0
